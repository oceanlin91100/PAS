@model UniPsg.Model.PAS.ViewModels.OrganizationViewModel

@{
    ViewBag.Title = "人員組織新增";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<h5><i class="fa fa-cog" aria-hidden="true"> &nbsp;設定管理</i>  &nbsp;&gt;&nbsp; <a href="@Url.Action("Index","Organization")">人員組織</a>  &nbsp;&gt;&nbsp;人員組織新增 </h5>
<center><h4>@ViewBag.Title</h4></center>
<div class="form-horizontal">
    <hr />
    @using (Html.BeginForm("Create", "Organization", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(m => m.ProjectId, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(m => m.ProjectId, new SelectList(ViewBag.Projects, "Id", "Name"), "請選擇", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.EmployeeNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeNo, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.Account, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BranchCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.BranchCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DeptCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.DeptCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeptCode, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.DeptName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeptName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TeamCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.TeamCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TeamCode, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.TeamName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TeamName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ManagerNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.ManagerNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManagerNo, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.ManageName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManageName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.ManageAccount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManageAccount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.FlowPath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(m => m.FlowPath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.FlowPath, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(m => m.NamePath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.NamePath, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a href="~/Organization" class="btn btn-warning">不儲存退出</a>
                <input type="submit" value="儲存" class="btn btn-success" />
                @Html.HiddenFor(m => m.Status, new { @Value = 0 })
                @Html.HiddenFor(m => m.Creator, new { @Value = @User.Identity.Name })
                @Html.HiddenFor(m => m.Modifier, new { @Value = @User.Identity.Name })                
            </div>
        </div>
    }
</div>
